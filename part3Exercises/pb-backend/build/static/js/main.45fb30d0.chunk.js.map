{"version":3,"sources":["components/entry.js","components/search.js","components/notification.js","components/personForm.js","services/phone.js","App.js","index.js"],"names":["Entry","person","deleteName","name","number","onClick","Search","props","value","filter","onChange","handler","Notification","message","success","className","PersonForm","onSubmit","addName","newName","handleAddName","newNumber","handleAddNumber","type","newEntry","axios","post","then","response","data","IDtoDelete","delete","updatedEntry","put","id","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","notification","setNotification","noteSuccess","setNoteSuccess","useEffect","get","event","target","preventDefault","matchingName","find","matchNameAndNumber","personObject","window","alert","confirm","pbServices","updatedPerson","map","setTimeout","catch","error","p","newPerson","concat","includes","key","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45fb30d0.chunk.js","sourcesContent":["import  React from 'react'\n\nconst Entry = ({person, deleteName}) => {\n    return (\n        <div>{person.name} {person.number} \n            <button onClick={deleteName}>delete</button>\n        </div>\n    )\n}\n\nexport default Entry","import React from 'react'\n\nconst Search = (props) => {\n\n    return (\n    <div>\n        filter shown with <input value={props.filter} onChange={props.handler}/>\n    </div>)\n}\n\nexport default Search","import React from 'react'\n\nconst Notification = ({ message, success }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={success}>\n            {message}\n        </div>\n    )\n }\n\n export default Notification","import React from 'react'\n\nconst PersonForm = (props) => {\n    return (\n        <form onSubmit={props.addName}>\n            <div>\n              name: <input value={props.newName} onChange={props.handleAddName}/>\n            </div>\n            <div>\n              number: <input value={props.newNumber} onChange={props.handleAddNumber}/>\n            </div>\n            <div>\n              <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst addNew = newEntry => {\n    const request = axios.post(baseUrl, newEntry)\n    return request.then(response => response.data)\n}\n\nconst deleteEntry = (IDtoDelete) => {\n    \n    return axios.delete(`${baseUrl}/${IDtoDelete}`)\n    \n}\n\nconst update = (updatedEntry) => {\n    const request = axios.put(`${baseUrl}/${updatedEntry.id}`, updatedEntry)\n    return request.then(response => response.data)\n}\n\n\nexport default { addNew, deleteEntry, update }","import React, {useState, useEffect} from 'react';\nimport Entry from './components/entry';\nimport Search from './components/search'\nimport Notification from './components/notification'\nimport PersonForm from './components/personForm';\nimport pbServices from './services/phone';\n\n\nimport axios from 'axios';\n\n\nconst App = () => {\n  \n  const hook = () => {\n    axios\n      .get('/api/persons')\n      .then(response => {\n        // console.log(response.data)\n        setPersons(response.data)\n      })\n  }\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notification, setNotification] = useState('')\n  const [noteSuccess, setNoteSuccess] = useState('default')\n  \n\n\n\n  useEffect(hook, [])\n\n\n\n  const addName = (event) => {\n    event.preventDefault()\n\n    const matchingName = persons.find(person => person.name === newName)\n    const matchNameAndNumber = persons.find(person => person.name === newName && person.number === newNumber)\n    \n    const personObject = {\n      name : newName,\n      number: newNumber,\n      id: newName\n    }\n\n    const addPerson = () => \n      pbServices\n        .addNew(personObject)\n        .then(newPerson => {\n          setPersons(persons.concat(newPerson))\n\n          setNotification(`${newPerson.name} has been added to the phone book`)\n          setNoteSuccess('notificationSuccess')\n          \n          setTimeout(() => {\n            setNotification(null)\n            setNoteSuccess(null)\n          }, 5000)  \n        })\n        .catch(error => {\n          setNotification(`An error has been encountered ${personObject.name} may not be added`)\n          setNoteSuccess('notificationError')\n\n          setTimeout(() => {\n            setNotification(null)\n            setNoteSuccess(null)\n          }, 5000)\n        })\n\n    const updatePerson = () => \n      pbServices\n        .update(personObject)\n        .then(updatedPerson => {\n          \n          setPersons(persons.map(person => person.id !== updatedPerson.id ? person : updatedPerson))\n\n          setNotification(`${updatedPerson.name} has been updated`)\n          setNoteSuccess('notificationSuccess')\n          \n          setTimeout(() => {\n            setNotification(null)\n            setNoteSuccess(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setNotification(`Info of ${personObject.name} has already been removed from server`)\n          setNoteSuccess('notificationError')\n\n          setPersons(persons.filter(p => p.id !== newName))\n\n          setTimeout(() => {\n            setNotification(null)\n            setNoteSuccess(null)\n          }, 5000)\n        })\n\n    if (typeof matchNameAndNumber === 'object') {\n                      window.alert( `${personObject.name} is already in the phonebook with the same number`)\n      } else if (typeof matchingName === 'object') {\n        // ask to update\n        window.confirm(`${newName} is already in the phonebook, do you want to update their number?` ) \n        updatePerson()\n      } else {\n        addPerson()\n      }\n    \n\n    setNewName('')\n    setNewNumber('')  \n      \n  }\n\n  const deleteName = id => {\n    \n    const person = persons.find(p => p.id === id)\n    \n    if (window.confirm(`Are you sure you want to delete ${person.name}`)) {\n      pbServices\n        .deleteEntry(person.id, person.name)\n        .then(response => {\n          console.log('deletion response', response.data)\n        })\n      setPersons(persons.filter(person => person.id !== id))\n      }\n  }\n\n  const entries = () =>\n  persons\n  .filter(person => person.name.includes(filter))\n  .map(person =>\n    <Entry \n      key={person.id}\n      deleteName={() => deleteName(person.id)}\n      person={person}\n    />\n  )\n  \n  const handleAddName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleAddNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} success={noteSuccess}/>\n      <Search filter={filter} handler={handleFilterChange}/>\n      <h3>add new</h3>\n      <PersonForm addName={addName} newName={newName} newNumber={newNumber}\n          handleAddName={handleAddName} handleAddNumber={handleAddNumber} />\n      <h3>Numbers</h3>\n      <div>{entries()}</div>\n    </div>\n  )\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}